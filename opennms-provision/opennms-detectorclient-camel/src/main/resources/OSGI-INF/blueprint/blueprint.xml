<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
    xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0"
    xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0 
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0
		http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.1.0.xsd
		http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.1.0
		http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.1.xsd
">

    <bean id="detectorRequestExecutor" class="org.opennms.netmgt.provision.detector.common.DetectorRequestExecutorLocalImpl" >
       <property name="serviceDetectorRegistry" ref="serviceDetectorRegistry"/>
    </bean>

    <reference id="serviceDetectorRegistry" interface="org.opennms.netmgt.provision.detector.registry.api.ServiceDetectorRegistry" availability="mandatory"/>
    <bean id="asyncDetectorRequestProcessor" class="org.opennms.netmgt.provision.detector.camel.AsyncDetectorRequestProcessor">
        <property name="detectorExecutor" ref="detectorRequestExecutor" />
    </bean>

    <reference id="minionIdentity" interface="org.opennms.minion.core.api.MinionIdentity" />

    <cm:property-placeholder id="detectorProperties"
        persistent-id="org.opennms.netmgt.provision.detector.camel">
        <cm:default-properties>
            <!-- Get the location name of the current monitoring system -->
            <cm:property name="monitoringLocationName">
                <bean factory-ref="minionIdentity" factory-method="getLocation" />
            </cm:property>
        </cm:default-properties>
    </cm:property-placeholder>

    <!-- Provided by minion-core -->
    <reference id="queuingservice" interface="org.apache.camel.Component" filter="(alias=opennms.broker)" />

    <camelContext id="detectorService" xmlns="http://camel.apache.org/schema/blueprint">
        <propertyPlaceholder id="properties" location="blueprint:detectorProperties" />
        <route id="detectorRequestExecutor">
            <from uri="queuingservice:detector@{{monitoringLocationName}}" />
            <setExchangePattern pattern="InOut" />
            <process ref="asyncDetectorRequestProcessor" />
        </route>
    </camelContext>
</blueprint>
